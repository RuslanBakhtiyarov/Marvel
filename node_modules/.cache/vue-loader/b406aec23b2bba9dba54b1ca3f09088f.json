{"remainingRequest":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ruslanbahtiarov/Documents/GitHub/Marvel/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/src/App.vue","mtime":1638038452217},{"path":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/node_modules/cache-loader/dist/cjs.js","mtime":1637776796652},{"path":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/node_modules/babel-loader/lib/index.js","mtime":1637776797914},{"path":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/node_modules/cache-loader/dist/cjs.js","mtime":1637776796652},{"path":"/Users/ruslanbahtiarov/Documents/GitHub/Marvel/node_modules/vue-loader/lib/index.js","mtime":1637776780379}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgICBpbXBvcnQgU3Bpbm5lciBmcm9tICIuL2NvbXBvbmVudHMvU3Bpbm5lciI7CiAgICBpbXBvcnQgQXBwTW9kYWwgZnJvbSAiLi9jb21wb25lbnRzL0FwcE1vZGFsIjsKICAgIGltcG9ydCBBcHBIZWFkZXIgZnJvbSAiLi9jb21wb25lbnRzL0FwcEhlYWRlciI7CmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3Z1ZS90eXBlcy91bWQnOwoKICAgIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgICBuYW1lOiAnQXBwJywKICAgICAgICBjb21wb25lbnRzOiB7CiAgICAgICAgICAgIEFwcEhlYWRlciwKICAgICAgICAgICAgQXBwTW9kYWwsCiAgICAgICAgICAgIFNwaW5uZXIsCiAgICAgICAgfSwKICAgICAgICBkYXRhKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgICAgICBjaGFyYWN0ZXJzOiBbXSwKICAgICAgICAgICAgICAgIGNoYXJhY3RlckluZGV4OiAwLAogICAgICAgICAgICAgICAgc2VhcmNoOicnLAogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgIGZldGNoQ2hhcmFjdGVyczpmdW5jdGlvbigpewogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9uZXRvbG9neS1hcGktbWFydmVsLmhlcm9rdWFwcC5jb20vY2hhcmFjdGVycycpCiAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpCiAgICAgICAgICAgICAgLnRoZW4oanNvbiA9PiB0aGlzLmNoYXJhY3RlcnMgPSBqc29uKQogICAgICAgICAgICB9LAogICAgICAgICAgICBjaGFuZ2VTZWFyY2g6IGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgdGhpcy5zZWFyY2ggPSB2YWx1ZQoKICAgICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIGNvbXB1dGVkOiB7CiAgICAgICAgICAgIGNoYXJhY3RlcjogZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNoYXJhY3RlcnNbdGhpcy5jaGFyYWN0ZXJJbmRleF0gfHwgbnVsbAogICAgICAgICAgICB9LAogICAgICAgICAgICBzZWFyY2hDaGFyYWN0ZXJzOiBmdW5jdGlvbigpewogICAgICAgICAgICAgICAgY29uc3Qge2NoYXJhY3RlcnMsc2VhcmNofSA9IHRoaXMKICAgICAgICAgICAgICAgIHJldHVybiBjaGFyYWN0ZXJzLmZpbHRlcigoY2hhcmFjdGVyKSA9PnsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2hhcmFjdGVyLm5hbWUudG9Mb2V3ckNhc2UuaW5kZXhPZihzZWFyY2gudG9Mb2V3ckNhc2UoKSkgIT09IC0xCiAgICAgICAgICAgICAgICB9KQoKICAgICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIGFzeW5jIG1vdW50ZWQoKXsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICBhd2FpdCB0aGlzLmZldGNoQ2hhcmFjdGVycygpCiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlCgogICAgICAgIH0sCiAgICB9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n\n        <app-header :changeSearch=\"changeSearch\"/>\n\n        <div class=\"container\">\n            <h1 class=\"pt-3 pb-3\">Персонажи Marvel</h1>\n           \n            <app-modal :character=\"character\"/>\n\n            <spinner v-if=\"loading\"/>\n\n            <div class=\"row\">\n                <h5 v-if=\"!searchCharacters.lenght && !loading\">Ничего не найденно.....</h5>\n                 <div\n                  v-for=\"(el,idx) in searchCharacters\" \n                  :key=\"idx\" \n                 class=\"card mb-3 col-sm-12 col-md-6 col-lg-4\">\n                <div class=\"row g-0\">\n                    <div class=\"col-4\">\n                        <img :src=\"el.thumbnail\" \n                            :alt=\"el.name\"\n                            style=\"max-width: 100%;\">\n                    </div>\n                    <div class=\"col-8\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{el.name}}</h5>\n                            <button type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n                                class=\"btn btn-secondary btn-sm\"\n                                @click=\"characterIndex = idx\"\n                                >\n                                Подробнее\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import Spinner from \"./components/Spinner\";\n    import AppModal from \"./components/AppModal\";\n    import AppHeader from \"./components/AppHeader\";\nimport { filter } from 'vue/types/umd';\n\n    export default {\n        name: 'App',\n        components: {\n            AppHeader,\n            AppModal,\n            Spinner,\n        },\n        data() {\n            return {\n                loading: false,\n                characters: [],\n                characterIndex: 0,\n                search:'',\n            }\n        },\n        methods: {\n            fetchCharacters:function(){\n              return fetch('https://netology-api-marvel.herokuapp.com/characters')\n              .then(res => res.json())\n              .then(json => this.characters = json)\n            },\n            changeSearch: function (value) {\n                this.search = value\n\n            },\n        },\n        computed: {\n            character: function(){\n                return this.characters[this.characterIndex] || null\n            },\n            searchCharacters: function(){\n                const {characters,search} = this\n                return characters.filter((character) =>{\n                    return character.name.toLoewrCase.indexOf(search.toLoewrCase()) !== -1\n                })\n\n            },\n        },\n        async mounted(){\n            this.loading = true\n            await this.fetchCharacters()\n            this.loading = false\n\n        },\n    }\n</script>\n\n<style>\n\n</style>\n"]}]}